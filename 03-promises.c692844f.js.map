{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAOC,SAASC,cAAc,SAC9BC,SAAWF,SAASC,cAAc,uBAClCE,QAAUH,SAASC,cAAc,sBACjCG,UAAYJ,SAASC,cAAc,yBAGrCH,EAAKC,KAAKM,iBAAiB,UAgB3B,SAAsBC,G,kBAdtB,IAAuBC,EAAUC,GAAVD,EAuBLE,EAvBeD,EAuBZE,EAtBZ,IAAIC,SAAS,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAExCC,YAAW,WACLH,EACFF,EAAQ,CAACL,WAAUC,UAEnBK,EAAO,CAACN,WAAUC,S,GAElB,I,KAcCU,MAAK,SAAAC,GAAWA,EAARZ,S,IAAUC,EAAKW,EAALX,MACjBY,EAAAxB,GAASyB,OAAOC,QACd,uBAAiCC,OAARd,EAAE,QAAYc,OAANf,EAAM,M,IAG1CgB,OAAM,SAAAL,GAAWA,EAARZ,S,IAAUC,EAAKW,EAALX,MAClBY,EAAAxB,GAASyB,OAAOI,QACd,sBAA8BF,OAARd,EAAE,QAAYc,OAANf,EAAM,M,IAG1CE,GAASgB,C,EAlBXpB,EAAEqB,iBAMF,IAJA,IAAIjB,EAAQZ,EAAKI,SAAS0B,cACpBF,EAAY5B,EAAKK,QAAQyB,cACzBC,EAAc/B,EAAKM,UAAUwB,cAE1BE,EAAI,EAAGA,GAAKD,EAAaC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form : document.querySelector('.form'),\n  inpDelay : document.querySelector('input[name=\"delay\"]'),\n  inpStep : document.querySelector('input[name=\"step\"]'),\n  inpAmount : document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', startAmounts);\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve , reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay})\n    } else {\n      reject({position, delay})\n    }\n  } , 2000)\n  })\n}\n\nfunction startAmounts(e) {\n\n  e.preventDefault();\n\n  let delay = refs.inpDelay.valueAsNumber;\n  const stepValue = refs.inpStep.valueAsNumber;\n  const amountValue = refs.inpAmount.valueAsNumber;\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${delay}ms`\n        );\n      });\n    delay += stepValue;\n  }\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inpDelay","inpStep","inpAmount","addEventListener","e","position","delay","i","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","stepValue","preventDefault","valueAsNumber","amountValue","i1","_loop"],"version":3,"file":"03-promises.c692844f.js.map"}